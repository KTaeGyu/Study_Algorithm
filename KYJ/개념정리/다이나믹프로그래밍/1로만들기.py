# 1463번 1로만들기

# 3으로 나누어 떨어지면, 3으로 나누고
# 2로 나누어 떨어지면, 2로 나누고
# 1을 빼서 1이 될 때까지 연산을 몇번하는지 구하기


# 5는 5 -> 4 -> 2 -> 1 3번
# 6은 6 -> 3 -> 1 2번
# 7은 7 -> 6 -> 3 -> 1 3번
# ...
# 10은 10 -> 5 -> 4 -> 2 -> 1 4번 / 10 -> 9 -> 3 -> 1 3번

## 만약에 숫자가 2나 3으로 나눠지지 않는다면, n - 1의 횟수 + 1
## 2나 3으로 나눠진다면, 몫을 구해서 연산 연산연산...

# GPT님이 풀어주심
def min_operations_to_one(N):
    DP = [0] * (N + 1)
    
    for i in range(2, N + 1):
        DP[i] = DP[i - 1] + 1   # 우선 n의 횟수를 (n - 1의 횟수 + 1)로 둔 다음에
        if i % 2 == 0:      # 만약에 2로 나눠진다면
            DP[i] = min(DP[i], DP[i // 2] + 1)      # 2로 나눴을 때의 몫의 횟수 + 1과 앞의 값과 비교해서 min값
        if i % 3 == 0: # 3으로 나눠진다면
            DP[i] = min(DP[i], DP[i // 3] + 1)      # 앞에서 update했거나, 그대로 둔 값과 비교해서 작은값
    
    return DP[N]

N = int(input())
result = min_operations_to_one(N)
print(result)