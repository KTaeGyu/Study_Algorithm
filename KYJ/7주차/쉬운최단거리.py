# 14940번 쉬운 최단거리
'''
지도가 주어지면 모든 지점에 대해서 목표지점까지의 거리를 구하여라
문제를 쉽게 하기 위해 가로와 세로로만 움직일 수 있다고 하자

[입력]
지도의 크기 n과 m이 주어진다. n은 세로, m은 가로의 길이
다음 n개 줄에 m개의 숫자가 주어지고, 0은 갈 수 없는 땅, 1은 갈 수 잇는 땅, 2는 목표지점이다.
15 15
2 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 0 0 0 0 1
1 1 1 1 1 1 1 1 1 1 0 1 1 1 1
1 1 1 1 1 1 1 1 1 1 0 1 0 0 0
1 1 1 1 1 1 1 1 1 1 0 1 1 1 1

[출력]
각 지점에서 목표지점까지의 거리를 출력한다.
원래 갈 수 없다면 0, 원래 갈수 있는 땅에서 도달할 수 없다면 -1을 출력한다.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
11 12 13 14 15 16 17 18 19 20 0 0 0 0 25
12 13 14 15 16 17 18 19 20 21 0 29 28 27 26
13 14 15 16 17 18 19 20 21 22 0 30 0 0 0
14 15 16 17 18 19 20 21 22 23 0 31 32 33 34
'''
from collections import deque
import sys
input = sys.stdin.readline

n, m = map(int, input().split())
arr = [list(map(int,input().split())) for _ in range(n)]
# 2찾기
for i in range(n):
    for j in range(m):
        if arr[i][j] == 2:
            sy, sx = i, j

# BFS로 진행하기
resultarr = [[0 for _ in range(m)] for _ in range(n)]
dir = [(1, 0), (-1, 0), (0, 1), (0, -1)]

def BFS(sy, sx):
    que = deque([(sy, sx, 0)])
    while que:
        cy, cx, level = que.popleft() 
        for dy, dx in dir:
            ny, nx = cy + dy, cx + dx
            if 0 <= ny < n and 0 <= nx < m:
                if resultarr[ny][nx] == 0:
                    if arr[ny][nx] != 2 and arr[ny][nx]:
                        resultarr[ny][nx] = level + 1
                        que.append((ny,nx,level+1))

BFS(sy, sx)
for i in range(n):
    for j in range(m):
        if resultarr[i][j] == 0 and arr[i][j] == 1:
            resultarr[i][j] = -1
    print(*resultarr[i])


