# ----------------------------------------------------------------------------------------------------------문제
# 상근이는 요즘 설탕공장에서 설탕을 배달하고 있다. 상근이는 지금 사탕가게에 설탕을 정확하게 N킬로그램을 배달해야 한다. 
# 설탕공장에서 만드는 설탕은 봉지에 담겨져 있다. 봉지는 3킬로그램 봉지와 5킬로그램 봉지가 있다.

# 상근이는 귀찮기 때문에, 최대한 적은 봉지를 들고 가려고 한다. 예를 들어, 18킬로그램 설탕을 배달해야 할 때, 
# 3킬로그램 봉지 6개를 가져가도 되지만, 5킬로그램 3개와 3킬로그램 1개를 배달하면, 더 적은 개수의 봉지를 배달할 수 있다.

# 상근이가 설탕을 정확하게 N킬로그램 배달해야 할 때, 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.

# ------------------------------------------------------------------------------------------------------예제 입력
# 첫째 줄에 N이 주어진다. (3 ≤ N ≤ 5000)
# 18

# ------------------------------------------------------------------------------------------------------예제 출력
# 상근이가 배달하는 봉지의 최소 개수를 출력한다. 만약, 정확하게 N킬로그램을 만들 수 없다면 -1을 출력한다.
# 4

# --------------------------------------------------------------------------------------------------알고리즘 분류
# DP

# ----------------------------------------------------------------------------------------------------------풀이
N = int(input())
dp = [N]*(N+1)
dp[0] = 0

for i in range(1, N+1):
    if i >= 3:
        dp[i] = min(dp[i], dp[i-3] + 1)
    if i >= 5:
        dp[i] = min(dp[i], dp[i-5] + 1)

if dp[N] != N:
    print(dp[N])
else:
    print(-1)

# ------------------------------------------------------------------------------------------------------풀이 과정
# !!개념의 다이나믹 프로그래밍 참고!!
# 다이나믹 프로그래밍에 대해 공부한 후 풀었음.
# 다이나믹 프로그래밍이란, 이전 값을 저장한 후 활용하는 방식이다.
# 이 문제에서는 N=0 일 때부터 N=(특정 숫자)일 경우까지 3 혹은 5로 나눴을 때 가장 적은 횟수를 저장할 필요가 있다.
# 이후 (특정 숫자)에서 3 혹은 5를 뺀 값에서 1을 더한 만큼(둘 중 작은 값)을 계속해서 저장하면 된다.
