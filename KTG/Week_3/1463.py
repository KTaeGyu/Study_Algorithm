# ----------------------------------------------------------------------------------------------------------문제
# 정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.
#
# 1. X가 3으로 나누어 떨어지면, 3으로 나눈다.
# 2. X가 2로 나누어 떨어지면, 2로 나눈다.
# 3. 1을 뺀다.
#
# 정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.

# ------------------------------------------------------------------------------------------------------예제 입력
# 첫째 줄에 1보다 크거나 같고, 106보다 작거나 같은 정수 N이 주어진다.
# 2

# ------------------------------------------------------------------------------------------------------예제 출력
# 첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.
# 1

# --------------------------------------------------------------------------------------------------알고리즘 분류
# DP

# ----------------------------------------------------------------------------------------------------------풀이
N = int(input())
dp = [N]*(N+1)
dp[0], dp[1] = 0, 0

for i in range(1, N+1):
    if i % 3 == 0:
        dp[i] = min(dp[i], dp[i // 3] + 1)
    if i % 2 == 0:
        dp[i] = min(dp[i], dp[i // 2] + 1)
    if i > 1:
        dp[i] = min(dp[i], dp[i - 1] + 1)

print(dp[N])

# ------------------------------------------------------------------------------------------------------풀이 과정
# 2839번 문제와 동일하게 DP를 이용한 문제.
# N = 1 일 경우는 0으로두고, 2 이상일 경우부터 연산을 시작한다.
# 각각 3과 2로 나누어 떨어질 경우, 그 몫이 되는 값에 1을 더한만큼 연산을 해야 한다.
# 나누어 떨어지지 않을 경우, 1씩 빼야하므로 이전 값보다 1번 더 연산해야 한다.
