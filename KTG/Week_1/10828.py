# ----------------------------------------------------------------------------------------------------------문제
# 정수를 저장하는 스택을 구현한 다음, 입력으로 주어지는 명령을 처리하는 프로그램을 작성하시오.

# 명령은 총 다섯 가지이다.

# push X: 정수 X를 스택에 넣는 연산이다.
# pop: 스택에서 가장 위에 있는 정수를 빼고, 그 수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.
# size: 스택에 들어있는 정수의 개수를 출력한다.
# empty: 스택이 비어있으면 1, 아니면 0을 출력한다.
# top: 스택의 가장 위에 있는 정수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.

# ------------------------------------------------------------------------------------------------------예제 입력
# 첫째 줄에 주어지는 명령의 수 N (1 ≤ N ≤ 10,000)이 주어진다. 
# 둘째 줄부터 N개의 줄에는 명령이 하나씩 주어진다. 
# 주어지는 정수는 1보다 크거나 같고, 100,000보다 작거나 같다. 
# 문제에 나와있지 않은 명령이 주어지는 경우는 없다.
'''
14
push 1
push 2
top
size
empty
pop
pop
pop
size
empty
pop
push 3
empty
top
'''

# ------------------------------------------------------------------------------------------------------예제 출력
# 출력해야하는 명령이 주어질 때마다, 한 줄에 하나씩 출력한다.
'''
2
2
0
2
1
-1
0
1
-1
0
3
'''

# --------------------------------------------------------------------------------------------------알고리즘 분류
# 구현
# 자료 구조
# 스택

# ----------------------------------------------------------------------------------------------------------풀이
# 시간초과를 해결하기 위해 input 대신 readline을 사용
import sys
input = sys.stdin.readline

# push X: 정수 X를 스택에 넣는 연산이다.
def _push(self, X):
    self.append(int(X))

# pop: 스택에서 가장 위에 있는 정수를 빼고, 그 수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.
def _pop(self):
    if self == []:
        print(-1)
    else:
        print(self.pop())

# size: 스택에 들어있는 정수의 개수를 출력한다.
def _size(self):
    print(len(self))

# empty: 스택이 비어있으면 1, 아니면 0을 출력한다.
def _empty(self):
    if self == []:
        print(1)
    else:
        print(0)

# top: 스택의 가장 위에 있는 정수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.
def _top(self):
    if self == []:
        print(-1)
    else:
        print(self[len(self)-1])

# 테스트가 진행되는 중에 저장될 데이터 공간
B = []

# 테스트 진행
for T in range(int(input())):
    A = list(input().split())
    if A[0] == 'push':
        _push(B, int(A[1]))
    if A[0] == 'pop':
        _pop(B)
    if A[0] == 'size':
        _size(B)
    if A[0] == 'empty':
        _empty(B)
    if A[0] == 'top':
        _top(B)

# ------------------------------------------------------------------------------------------------------풀이 과정
# 10845번 문제와 유사하게 풀었음.