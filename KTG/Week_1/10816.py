# -------------------------------------------------------------------------------------------------------------------------문제
# 숫자 카드는 정수 하나가 적혀져 있는 카드이다. 
# 상근이는 숫자 카드 N개를 가지고 있다. 
# 정수 M개가 주어졌을 때, 이 수가 적혀있는 숫자 카드를 상근이가 몇 개 가지고 있는지 구하는 프로그램을 작성하시오.

# ---------------------------------------------------------------------------------------------------------------------예제 입력
# 첫째 줄에 상근이가 가지고 있는 숫자 카드의 개수 N(1 ≤ N ≤ 500,000)이 주어진다. 
# 둘째 줄에는 숫자 카드에 적혀있는 정수가 주어진다. 
# 숫자 카드에 적혀있는 수는 -10,000,000보다 크거나 같고, 10,000,000보다 작거나 같다.

# 셋째 줄에는 M(1 ≤ M ≤ 500,000)이 주어진다. 
# 넷째 줄에는 상근이가 몇 개 가지고 있는 숫자 카드인지 구해야 할 M개의 정수가 주어지며, 이 수는 공백으로 구분되어져 있다. 
# 이 수도 -10,000,000보다 크거나 같고, 10,000,000보다 작거나 같다.
'''
10
6 3 2 10 10 10 -10 -10 7 3
8
10 9 -5 2 3 4 5 -10
'''

# ---------------------------------------------------------------------------------------------------------------------예제 출력
# 첫째 줄에 입력으로 주어진 M개의 수에 대해서, 각 수가 적힌 숫자 카드를 상근이가 몇 개 가지고 있는지를 공백으로 구분해 출력한다.
# 3 0 0 1 2 0 0 2

# -----------------------------------------------------------------------------------------------------------------알고리즘 분류
# 자료 구조
# 정렬
# 이분 탐색
# 해시를 사용한 집합과 맵

# ---------------------------------------------------------------------------------------------------------------------풀이 과정
# 시간복잡도 개선을 위한 인자들
from collections import Counter
import sys
input = sys.stdin.readline

# 입력값들
N = int(input())
cards = list(map(int, input().split()))
M = int(input())
counts = list(map(int, input().split()))

# Counter 함수 활용, 입력받은 카드 리스트를 딕셔너리 형태로 만듦
card_dict = dict(Counter(cards))

# 리스트 컴프리헨션 활용, 
# counts 요소들이 card_dict에 있을 때 해당 count를 Key로, card_dict의 Value를 Value로 받아 딕셔너리 요소를 만들고, 
# 없다면 Value를 0 으로 해서 Key와 함께 딕셔너리 요소로 만듦
result = [card_dict[count] if count in card_dict else 0 for count in counts]

# 언패킹 활용, result 리스트 내 값들을 ' ' 간격으로 출력
print(*result)

# ---------------------------------------------------------------------------------------------------------------------풀이 과정
# for 문을 활용하여 dictionalry 제작, 시간 초과로 실패
# 리스트 컴프리헨션, 카운터, 리드라인을 이용하여 시간복잡도 개선
'''
count_dict = {}
for count in counts:
    count_dict[count] = count_dict.get(count, 0)

for card_key in card_dict.keys():
    if card_key in list(count_dict.keys()):
        count_dict[card_key] = card_dict[card_key]

result = list(count_dict.values())

for i in result:
    print(i, end = ' ')
'''